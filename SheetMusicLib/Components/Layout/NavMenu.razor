@using SheetMusicLib.Models
@using SheetMusicLib.Services

<div class="top-row ps-3 navbar navbar-dark" style="@GetNavMenuStyle()">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SheetMusicLib</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu" style="@GetNavMenuStyle()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/admin/themes">
                <span class="oi oi-brush" aria-hidden="true"></span> Theme Settings
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private Theme CurrentTheme { get; set; } = new Theme();

    protected override async Task OnInitializedAsync()
    {
        CurrentTheme = await ThemeService.GetCurrentThemeAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [Inject]
    public ThemeService ThemeService { get; set; } = null!;

    private string GetNavMenuStyle()
    {
        return $"background-color: {CurrentTheme.sPrimaryColor}; color: {CurrentTheme.sForeColor};";
    }
}
